// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/kanatsanan6/hrm/service (interfaces: PolicyInterface)

// Package mock_service is a generated GoMock package.
package mock_service

import (
	reflect "reflect"

	fiber "github.com/gofiber/fiber/v2"
	gomock "github.com/golang/mock/gomock"
)

// MockPolicyInterface is a mock of PolicyInterface interface.
type MockPolicyInterface struct {
	ctrl     *gomock.Controller
	recorder *MockPolicyInterfaceMockRecorder
}

// MockPolicyInterfaceMockRecorder is the mock recorder for MockPolicyInterface.
type MockPolicyInterfaceMockRecorder struct {
	mock *MockPolicyInterface
}

// NewMockPolicyInterface creates a new mock instance.
func NewMockPolicyInterface(ctrl *gomock.Controller) *MockPolicyInterface {
	mock := &MockPolicyInterface{ctrl: ctrl}
	mock.recorder = &MockPolicyInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPolicyInterface) EXPECT() *MockPolicyInterfaceMockRecorder {
	return m.recorder
}

// Authorize mocks base method.
func (m *MockPolicyInterface) Authorize(arg0 *fiber.Ctx, arg1, arg2 string) bool {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Authorize", arg0, arg1, arg2)
	ret0, _ := ret[0].(bool)
	return ret0
}

// Authorize indicates an expected call of Authorize.
func (mr *MockPolicyInterfaceMockRecorder) Authorize(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Authorize", reflect.TypeOf((*MockPolicyInterface)(nil).Authorize), arg0, arg1, arg2)
}

// Export mocks base method.
func (m *MockPolicyInterface) Export(arg0 *fiber.Ctx) []map[string]string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Export", arg0)
	ret0, _ := ret[0].([]map[string]string)
	return ret0
}

// Export indicates an expected call of Export.
func (mr *MockPolicyInterfaceMockRecorder) Export(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Export", reflect.TypeOf((*MockPolicyInterface)(nil).Export), arg0)
}
