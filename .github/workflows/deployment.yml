name: Deploy Production

on:
  push:
    branches: [ "main" ]

jobs:

  build:
    name: Build image
    runs-on: ubuntu-latest

    steps:

    - name: check out code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Environment Variable
      run: |
        echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> .env
        echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> .env
        echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> .env
        echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> .env
        echo "DATABASE_USER=${{ secrets.DATABASE_USER }}" >> .env
        echo "FRONTEND_URL=${{ secrets.FRONTEND_URL }}" >> .env
        echo "MAILER_HOST=${{ secrets.MAILER_HOST }}" >> .env
        echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
        echo "MAILER_PASSWORD=${{ secrets.MAILER_PASSWORD }}" >> .env
        echo "MAILER_PORT=${{ secrets.MAILER_PORT }}" >> .env
        echo "MAILER_USERNAME=${{ secrets.MAILER_USERNAME }}" >> .env
        echo "PORT=${{ secrets.PORT }}" >> .env

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: hrm-backend
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
